# Kernel config based on: arch/arm/configs/Stock_@klte@_defconfig

pkgname="linux-samsung-klte"
pkgver=3.4.113
pkgrel=0
pkgdesc="Samsung Galaxy S5 kernel fork"
arch="armhf"
_carch="arm"
_flavor="samsung-klte"
url="https://github.com/SmartPack/Stock-Kernel_Linaro-UBERTC_kltexxx"
license="GPL2"
options="!strip !check !tracedeps"
makedepends="perl sed installkernel bash gmp-dev bc linux-headers elfutils-dev xz dtbtool"
HOSTCC="${CC:-gcc}"
HOSTCC="${HOSTCC#${CROSS_COMPILE}}"

# Source
_repository="Stock-Kernel_Linaro-UBERTC_kltexxx"
_tag="v5"
_config="config-${_flavor}.${arch}"
source="
	$pkgname-$_commit.tar.gz::https://github.com/SmartPack/${_repository}/archive/${_tag}.tar.gz
	$_config
	compiler-gcc6.h
	00_reserve_fb_memory_on_normal_boot.patch
"
builddir="$srcdir/${_repository}-5"

prepare() {
	default_prepare

	# gcc6 support
	cp -v "$srcdir/compiler-gcc6.h" "$builddir/include/linux/"

	# Remove -Werror from all makefiles
	find . -type f -name Makefile -print0 | \
		xargs -0 sed -i 's/-Werror-/-W/g'
	find . -type f -name Makefile -print0 | \
		xargs -0 sed -i 's/-Werror//g'

	# Prepare kernel config ('yes ""' for kernels lacking olddefconfig)
	cp "$srcdir"/$_config "$builddir"/.config
	yes "" | make ARCH="$_carch" HOSTCC="$HOSTCC" oldconfig
}

menuconfig() {
	cd "$builddir"
	make ARCH="$_carch" menuconfig
	cp .config "$startdir"/$_config
}

build() {
	unset LDFLAGS
	make ARCH="$_carch" CC="${CC:-gcc}" \
		KBUILD_BUILD_VERSION="$((pkgrel + 1 ))-postmarketOS"

	# Generate master DTB
	dtbTool -s 2048 -p "scripts/dtc/" -o "arch/arm/boot/dt.img" "arch/arm/boot/"
}

package() {
	# kernel.release
	install -D "$builddir/include/config/kernel.release" \
		"$pkgdir/usr/share/kernel/$_flavor/kernel.release"

	# zImage (find the right one)
	cd "$builddir/arch/$_carch/boot"
	_target="$pkgdir/boot/vmlinuz-$_flavor"
	for _zimg in zImage-dtb Image.gz-dtb *zImage Image; do
		[ -e "$_zimg" ] || continue
		msg "zImage found: $_zimg"
		install -Dm644 "$_zimg" "$_target"
		break
	done
	if ! [ -e "$_target" ]; then
		error "Could not find zImage in $PWD!"
		return 1
	fi

	# Master DTB
	install -Dm644 "$builddir/arch/arm/boot/dt.img" \
		"$pkgdir/boot/dt.img"
}

sha512sums="442a2d25135a80c433db5c91578953eedd5afb38effe6221185afd7f9643e00423570b428408b00e9ae52dadc9f0c747691084734f8428f570cf7c5f3b8d0875  linux-samsung-klte-.tar.gz
b3a1551b68f88a9916ac493d5d657ac9f4fd1641392f1202068168ebd8267f789514015a7a1dc00410293bf7facef2014c3cfdf23001ca3530ebc643f718e95f  config-samsung-klte.armhf
d80980e9474c82ba0ef1a6903b434d8bd1b092c40367ba543e72d2c119301c8b2d05265740e4104ca1ac5d15f6c4aa49e8776cb44264a9a28dc551e0d1850dcc  compiler-gcc6.h
39fcb2a67aa40950333aecf090e2db230565cdcc34ff38b533a1dd6e5c594964c382b220a889e58a64e2669004a5012be623ec730296fcb770984aede1e9883e  00_reserve_fb_memory_on_normal_boot.patch"
